{
    "compilerOptions": {
        "target": "es5",  //指定編譯生成的JS版本
        "module": "esnext", //指定生成哪種模組
        "strict": true,  //採用嚴格模式          
        "allowJs":true, //是否允許JS檔案(.js或.jsx)編譯
        "esModuleInterop": true,  //是否允許兼容模組導入的方式(ps:禁用命名空间引用 (import * as fs from "fs") 启用 CJS/AMD/UMD 风格引用 (import fs from "fs"))
        "allowSyntheticDefaultImports":true, //是否允許從沒有默認導出的模組進行默認導入(只有在module為"system"或esModuleInterop為true時才使用)
        "lib": ["dom", "dom.iterable","esnext"], // 要包含在编译中的依赖库文件列表
        "skipLibCheck": true, // 跳过所有声明文件的类型检查
        "forceConsistentCasingInFileNames": true, // 不允许对同一个文件使用不一致格式的引用
        "moduleResolution": "node", // 使用 Node.js 风格解析模块
        "resolveJsonModule": true, // 允许使用 .json 扩展名导入的模块
        "noEmit": true, // 不输出(意思是不编译代码，只执行类型检查
        "jsx": "react", // 在.tsx文件中支持JSX
        "sourceMap": true, // 生成相应的.map文件
        "declaration": true, // 生成相应的.d.ts文件
        "noUnusedLocals": true, // 报告未使用的本地变量的错误
        "noUnusedParameters": true, // 报告未使用参数的错误
        "experimentalDecorators": true, // 启用对ES装饰器的实验性支持
        "incremental": true, // 通过从以前的编译中读取/写入信息到磁盘上的文件来启用增量编译
        "noFallthroughCasesInSwitch": true,
        "types": [ "node" ],
        "paths": {
            "@/*":["./src/*"],
            "@/public/*":["./public/*"]
        }
    },
    "include":["src/**/*"],
    "exclude":["node_modules", "dist", "public"],
    "references": [{ "path": "./tsconfig.node.json" }]
}